apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'


android {

    compileSdkVersion AndroidSdk.compileSdk
    buildToolsVersion AndroidSdk.buildToolsVersion
    defaultConfig {
        applicationId       AndroidSdk.DalalAppId
        minSdkVersion       AndroidSdk.minSdk
        targetSdkVersion    AndroidSdk.targetSdk
        versionCode         AndroidSdk.versionCode
        versionName         AndroidSdk.versionName
        multiDexEnabled true
        testInstrumentationRunner (TestLibs.junitRunner)
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }

    sourceSets {
        release.java.srcDirs += 'build/generated/source/proto/release/java'
        release.java.srcDirs += 'build/generated/source/proto/release/grpc'
        release.java.srcDirs += 'build/generated/source/proto/release/javalite'
        main.proto.srcDirs += 'src/main/proto'
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.4.0'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.8.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support Libraries
    implementation (Libs.appcompat)
    implementation (Libs.androidMaterialLibrary)
    implementation (Libs.browser)
    implementation (Libs.preference)
    implementation (Libs.constraintLayout)
    implementation (Libs.gmsServiceAuth)

    // Material libraries
    implementation (Libs.betterSpinnerLibrary)
    implementation (Libs.mpAndroidChartLibrary)
    implementation (Libs.picasso)

    // gRPC
    implementation (Libs.grpcOkHttp)
    implementation (Libs.grpcProtobufLite)
    implementation (Libs.grpcStub)
    implementation (Libs.javaxAnnotation)

    //Dagger
    implementation (Libs.dagger)
    implementation (Libs.kotlinStd)
    kapt (Libs.daggerCompiler)

    // Gson
    implementation (Libs.gson)

    testImplementation (TestLibs.junit)

    // Kotlin libraries
    implementation (Libs.kotlinStd)
    implementation (Libs.anko)
    implementation (Libs.kotlinCoroutine)

    // Navigation
    implementation (Libs.navigationArchFragmentKtx)
    implementation (Libs.navigationArchUIKtx)

    // Lifecycle
    implementation (Libs.lifecycleCommon)
    implementation (Libs.lifecycleExtensions)
    implementation (Libs.lifecycleRuntime)

    //expandable Textview
    implementation (Libs.expandableTextView)

    // app tour
    implementation (Libs.tapTargetSafeView)

    // firebase BOM
    implementation platform(Libs.firebaseBom)

    // firebase analytics
    implementation (Libs.firebaseAnalytics)

    // firebase crashanalytics
    implementation (Libs.crashAnalytics)

    // firebase cloud messaging
    implementation(Libs.firebasecloudmessaging)

    //security
    implementation(Libs.security)

    // play core sdk
    implementation (Libs.playCore)
    implementation (Libs.playCoreKtx)
}
